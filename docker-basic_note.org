#+TITLE:Basic Docker


* Docker run 

[docker run] = [docker create] + [docker start]




 
#+BEGIN_SRC bash

# docker create hello-world
$ docker create hello-world
# docker create hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pull complete 
Digest: sha256:7d246653d0511db2a6b2e0436cfd0e52ac8c066000264b3ce63331ac66dca625
Status: Downloaded newer image for hello-world:latest
dfa58d936f7893e4d551e4a453e3432823f08121954cbdffe19b554bc64d09e7
<-    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -  [20220824T010551]
<-    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -  [20220824T010611]
# docker start -a dfa58d936f7893e4d551e4a453e3432823f08121954cbdffe19b554bc64d09e7
$ docker start -a dfa58d936f7893e4d551e4a453e3432823f08121954cbdffe19b554bc64d09e7
# docker start -a dfa58d936f7893e4d551e4a453e3432823f08121954cbdffe19b554bc64d09e7
             ( -a flag is for redirect the out put of system stdout to the terminal)


Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/
#+END_SRC


* Namespacing and Control Groups

- Namespacing (Isolating resources per process (or group of processes)
  1) Processes
  2) Hard drive
  3) Network
  4) Users
  5) Hostnames
  6) Inter Process Communication

- Control Groups (Limit amount of resources used per process)
  1) Memoy
  2) CPU Usage
  3) HD I/O
  4) Network Bendwidth

* Image and Container

Container is a running instance of a Docker Image.

* Docker server (engine) runs on Windows on Linux virtual machine 


* ducker run command

** docker run busybox echo hello there

- Command "echo hello there" will overwrite the default command 

#+BEGIN_SRC bash
# docker run busybox echo hi Alex
# docker run busybox echo hi Alex
$ docker run busybox echo hi Alex
Unable to find image 'busybox:latest' locally
latest: Pulling from library/busybox
50783e0dfb64: Pull complete 
Digest: sha256:ef320ff10026a50cf5f0213d35537ce0041ac1d96e9b7800bafd8bc9eff6c693
Status: Downloaded newer image for busybox:latest
hi Alex

#+END_SRC

- another example using ls

 <-  [20220824T053942]
$ docker run busybox ls
bin
dev
etc
home
proc
root
sys
tmp
usr
var

** 
